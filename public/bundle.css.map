{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\src\\App.svelte",
    "..\\src\\Menu.svelte",
    "..\\src\\Text.svelte",
    "..\\src\\Each.svelte",
    "..\\src\\If.svelte",
    "..\\src\\Range.svelte",
    "..\\src\\Translate.svelte",
    "..\\src\\Rotate.svelte",
    "..\\src\\Scale.svelte",
    "..\\src\\Clock.svelte"
  ],
  "sourcesContent": [
    "<script>\r\n\timport range from 'lodash.range'\r\n\timport Menu from './Menu.svelte'\r\n\r\n\timport Canvas from './Canvas.svelte'\r\n\timport Grid from './Grid.svelte'\r\n\timport Rect from './Rect.svelte'\r\n\timport Circle from './Circle.svelte'\r\n\timport Line from './Line.svelte'\r\n\timport Text from './Text.svelte'\r\n\timport Each from './Each.svelte'\r\n\timport If from './If.svelte'\r\n\timport Range from './Range.svelte'\r\n\timport Chess from './Chess.svelte'\r\n\timport Random from './Random.svelte'\r\n\timport Button from './Button.svelte'\r\n\timport Click from './Click.svelte'\r\n\timport Shortcut from './Shortcut.svelte'\r\n\timport ColorPair from './ColorPair.svelte'\r\n\timport Bind from './Bind.svelte'\r\n\timport KeyUp from './KeyUp.svelte'\r\n\timport GuessMyNumber from './GuessMyNumber.svelte'\r\n\timport Translate from './Translate.svelte'\r\n\timport Rotate from './Rotate.svelte'\r\n\timport Scale from './Scale.svelte'\r\n\timport Clock from './Clock.svelte'\r\n\r\n\tconst help=(keyword) => window.open('https://github.com/ChristerNilsson/svelte-projects/wiki/'+keyword, '_blank')\r\n\tconst link=(link) => window.open(links[link], '_blank')\r\n\t\r\n\tconst links = {}\r\n\tlinks['Svelte'] = 'https://svelte.dev'\r\n\tlinks['Tutorial'] = 'https://svelte.dev/tutorial'\r\n\tlinks['API'] = 'https://svelte.dev/docs'\r\n\tlinks['Examples'] = 'https://svelte.dev/examples'\r\n\tlinks['REPL'] = 'https://svelte.dev/repl/hello-world?version=3.15.0'\r\n\r\n\tlet selectedTree=''\r\n\tlet hor = 'hor'\r\n\tlet path = [\"\"]\r\n\tconst fs = 'font-size:30px'\r\n\r\n\tconst children0 = 'L1|L2|L3|L4|L5|L6'.split('|')\r\n\tlet selected0 = ''\r\n\t$: if (selected0=='L1') children1 = 'canvas|grid|rect|circle|line|text'.split('|')\r\n\t$: if (selected0=='L2') children1 = 'each|if|range|chess'.split('|')\r\n\t$: if (selected0=='L3') children1 = 'random|button|shortcut'.split('|')\r\n\t$: if (selected0=='L4') children1 = 'colorPair'.split('|')\r\n\t$: if (selected0=='L5') children1 = 'bind:|on:keyup|guessMyNumber'.split('|')\r\n\t$: if (selected0=='L6') children1 = 'translate|rotate|scale|clock'.split('|')\r\n\r\n\t$: help(selected2)\r\n\t$: link(selected3)\r\n\t\r\n\tlet children1 = ['']\r\n\tlet children2 = 'bind:|button|circle|$:|each|if|line|on:click|on:keyup|random|range|rect|rotate|scale|svg|text|translate'.split('|')\r\n\tlet children3 = 'Svelte|Tutorial|API|Examples|REPL'.split('|')\r\n\t\t\r\n\tlet selected1 = ''\r\n\tlet selected2 = ''\r\n\tlet selected3 = ''\r\n\r\n</script>\r\n\r\n<style>\r\n\t:global(body) {background-color:#000}\r\n\t.left {float:left}\r\n\t.m {margin:0px}\r\n</style>\r\n\r\n<div class='row left s1 m'>\r\n\t<Menu children={children3} bind:selected={selected3}/>\r\n\t<Menu children={children2} bind:selected={selected2} color='yellow' bgcolor='black'/>\r\n\t<Menu children={children0} bind:selected={selected0}/>\r\n\t<Menu children={children1} bind:selected={selected1}/>\r\n</div>\r\n\r\n<!-- L1 -->\r\n{#if selected1 == 'svg'}<Canvas />{/if}\r\n{#if selected1 == 'canvas'}<Canvas />{/if}\r\n{#if selected1 == 'grid'}<Grid />{/if}\r\n{#if selected1 == 'rect'}<Rect />{/if}\r\n{#if selected1 == 'circle'}<Circle />{/if}\r\n{#if selected1 == 'line'}<Line />{/if}\r\n{#if selected1 == 'text'}<Text />{/if}\r\n\r\n<!-- L2 -->\r\n{#if selected1 == 'each'}<Each />{/if}\r\n{#if selected1 == 'if'}<If />{/if}\r\n{#if selected1 == 'range'}<Range />{/if}\r\n{#if selected1 == 'chess'}<Chess />{/if}\r\n\r\n<!-- L3 -->\r\n{#if selected1 == 'random'}<Random />{/if}\r\n{#if selected1 == 'button'}<Button />{/if}\r\n{#if selected1 == 'on:click'}<Click />{/if}\r\n{#if selected1 == 'shortcut'}<Shortcut />{/if}\r\n\r\n<!-- L4 -->\r\n{#if selected1 == 'colorPair'}<ColorPair />{/if}\r\n\r\n<!-- L5 -->\r\n{#if selected1 == 'bind:'}<Bind />{/if}\r\n{#if selected1 == 'on:keyup'}<KeyUp />{/if}\r\n{#if selected1 == 'guessMyNumber'}<GuessMyNumber />{/if}\r\n\r\n<!-- L6 -->\r\n{#if selected1 == 'translate'}<Translate />{/if}\r\n{#if selected1 == 'rotate'}<Rotate />{/if}\r\n{#if selected1 == 'scale'}<Scale />{/if}\r\n{#if selected1 == 'clock'}<Clock />{/if}\r\n",
    "<script>\r\n\texport let color='black'\r\n\texport let bgcolor='grey'\r\n\texport let children\r\n\texport let selected = children[0]\r\n</script>\r\n\r\n<style>\r\n\t.nav {\r\n\t\twidth:150px;\r\n\t\tmargin:2px;\r\n\t\tcursor:default;\r\n\t}\r\n\t.mnu {\r\n\t\twidth:150px;\r\n\t\tmargin:0.5%;\r\n\t\tcolor:white;\r\n\t}\r\n\t.text-red {color:red}\r\n\r\n</style>\r\n\r\n<div class='nav' style='background-color:{bgcolor}'>\r\n\t{#each children as c}\r\n\t\t{#if selected==c}\r\n\t\t\t<div class=\"mnu text-red\" on:click = {() => selected=c} >{c}</div>\r\n\t\t{:else}\r\n\t\t\t<div class=\"mnu\" style='color:{color}' on:click = {() => selected=c} >{c}</div>\r\n\t\t{/if}\r\n\t{/each}\r\n</div>",
    "<script>\r\n\timport Canvas from './Canvas.svelte'\r\n</script>\r\n\r\n<style>\r\n\ttext {fill:red}\r\n\t.small { font: italic 13px sans-serif}\r\n\t.heavy { font: bold 30px sans-serif}\r\n\t.Rrrrr { font: italic 40px serif; fill: yellow}\r\n</style>\r\n\r\n<Canvas>\r\n\t<text x=20 y=35 class=small>My</text>\r\n\t<text x=40 y=35 class=heavy>cat</text>\r\n\t<text x=45 y=75 class=\"small\">is</text>\r\n\t<text x=\"55\" y=\"75\" class=\"Rrrrr\">Grumpy!</text>\r\n</Canvas>\r\n",
    "<script>\r\n\timport Grid from './Grid.svelte'\r\n</script>\r\n\r\n<style>\r\n\tcircle {stroke:yellow; stroke-width:1; fill:green}\r\n</style>\r\n\r\n<Grid>\r\n\t{#each [50,100,150] as i}\r\n\t\t<circle cx={i} cy={i} r=10 />\r\n\t{/each}\r\n</Grid>\r\n",
    "<script>\r\n\timport Grid from './Grid.svelte'\r\n</script>\r\n\r\n<style>\r\n\tcircle {stroke:yellow; stroke-width:1; fill:green}\r\n</style>\r\n\r\n<Grid>\r\n\t{#each [50,100,150] as i}\r\n\t\t<circle cx={i} cy={i} r=10 />\r\n\t{/each}\r\n</Grid>\r\n",
    "<script>\r\n\timport Grid from './Grid.svelte'\r\n\timport range from 'lodash.range'\r\n</script>\r\n\r\n<style>\r\n\tcircle {stroke:yellow; stroke-width:1; fill:green}\r\n</style>\r\n\r\n<Grid>\r\n\t{#each range(11) as i}\r\n\t\t<circle cx={20*i} cy={20*i} r={2*i} />\r\n\t{/each}\r\n</Grid>\r\n",
    "<style>\r\n\tsvg {\r\n\t\twidth: 200px;\r\n\t\theight: 200px;\r\n\t}\r\n\tline {stroke-width:2}\r\n</style>\r\n\r\n<svg viewBox='-100 -100 200 200'>\r\n\t<rect x=-100 y=-100 width=200 height=200 style='fill:grey'/>\r\n\t<line y1=0 y2=90 style='stroke:black'/>\r\n\t<line y1=0 y2=90 style='stroke:red' transform=\"translate(20)\"/>\r\n</svg>\r\n",
    "<style>\r\n\tsvg {\r\n\t\twidth: 200px;\r\n\t\theight: 200px;\r\n\t}\r\n\tline {stroke-width:2}\r\n</style>\r\n\r\n<svg viewBox='-100 -100 200 200'>\r\n\t<rect x=-100 y=-100 width=200 height=200 style='fill:grey'/>\r\n\t<line y2=90 style='stroke:black'/>\r\n\t<line y2=90 style='stroke:red' transform=\"rotate(45)\"/>\r\n</svg>\r\n",
    "<style>\r\n\tsvg {\r\n\t\twidth: 200px;\r\n\t\theight: 200px;\r\n\t}\r\n\tline {stroke-width:2}\r\n</style>\r\n\r\n<svg viewBox='-100 -100 200 200'>\r\n\t<rect x=-100 y=-100 width=200 height=200 style='fill:grey'/>\r\n\t<line y1=0 y2=90 style='stroke:black'/>\r\n\t<line y1=0 y2=90 style='stroke:red' transform=\"rotate(90) scale(0.5)\"/>\r\n</svg>\r\n",
    "<script>\r\n\timport { onMount } from 'svelte';\r\n\r\n\tlet time = new Date();\r\n\r\n\t// these automatically update when `time`\r\n\t// changes, because of the `$:` prefix\r\n\t$: hours = time.getHours();\r\n\t$: minutes = time.getMinutes();\r\n\t$: seconds = time.getSeconds();\r\n\r\n\tonMount(() => {\r\n\t\tconst interval = setInterval(() => {\r\n\t\t\ttime = new Date();\r\n\t\t}, 1000);\r\n\r\n\t\treturn () => {\r\n\t\t\tclearInterval(interval);\r\n\t\t};\r\n\t});\r\n</script>\r\n\r\n<style>\r\n\tsvg {\r\n\t\twidth: 50%;\r\n\t\theight: 50%;\r\n\t}\r\n\r\n\t.clock-face {\r\n\t\tstroke: #333;\r\n\t\tfill: white;\r\n\t}\r\n\r\n\t.minor {\r\n\t\tstroke: #999;\r\n\t\tstroke-width: 0.5;\r\n\t}\r\n\r\n\t.major {\r\n\t\tstroke: #333;\r\n\t\tstroke-width: 1;\r\n\t}\r\n\r\n\t.hour {\r\n\t\tstroke: #333;\r\n\t}\r\n\r\n\t.minute {\r\n\t\tstroke: #666;\r\n\t}\r\n\r\n\t.second, .second-counterweight {\r\n\t\tstroke: rgb(180,0,0);\r\n\t}\r\n\r\n\t.second-counterweight {\r\n\t\tstroke-width: 3;\r\n\t}\r\n</style>\r\n\r\n<svg viewBox='-50 -50 100 100'>\r\n\t<circle class='clock-face' r='48'/>\r\n\r\n\t<!-- markers -->\r\n\t{#each [0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55] as minute}\r\n\t\t<line\r\n\t\t\tclass='major'\r\n\t\t\ty1='35'\r\n\t\t\ty2='45'\r\n\t\t\ttransform='rotate({30 * minute})'\r\n\t\t/>\r\n\r\n\t\t{#each [1, 2, 3, 4] as offset}\r\n\t\t\t<line\r\n\t\t\t\tclass='minor'\r\n\t\t\t\ty1='42'\r\n\t\t\t\ty2='45'\r\n\t\t\t\ttransform='rotate({6 * (minute + offset)})'\r\n\t\t\t/>\r\n\t\t{/each}\r\n\t{/each}\r\n\r\n\t<!-- hour hand -->\r\n\t<line\r\n\t\tclass='hour'\r\n\t\ty1='2'\r\n\t\ty2='-20'\r\n\t\ttransform='rotate({30 * hours + minutes / 2})'\r\n\t/>\r\n\r\n\t<!-- minute hand -->\r\n\t<line\r\n\t\tclass='minute'\r\n\t\ty1='4'\r\n\t\ty2='-30'\r\n\t\ttransform='rotate({6 * minutes + seconds / 10})'\r\n\t/>\r\n\r\n\t<!-- second hand -->\r\n\t<g transform='rotate({6 * seconds})'>\r\n\t\t<line class='second' y1='10' y2='-38'/>\r\n\t\t<line class='second-counterweight' y1='10' y2='2'/>\r\n\t</g>\r\n</svg>"
  ],
  "names": [],
  "mappings": "AAiES,IAAI,AAAE,CAAC,iBAAiB,IAAI,CAAC,AACrC,KAAK,cAAC,CAAC,MAAM,IAAI,CAAC,AAClB,EAAE,cAAC,CAAC,OAAO,GAAG,CAAC;AC3Df,IAAI,cAAC,CAAC,AACL,MAAM,KAAK,CACX,OAAO,GAAG,CACV,OAAO,OAAO,AACf,CAAC,AACD,IAAI,cAAC,CAAC,AACL,MAAM,KAAK,CACX,OAAO,IAAI,CACX,MAAM,KAAK,AACZ,CAAC,AACD,SAAS,cAAC,CAAC,MAAM,GAAG,CAAC;ACbrB,IAAI,eAAC,CAAC,KAAK,GAAG,CAAC,AACf,MAAM,eAAC,CAAC,AAAC,IAAI,CAAE,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,AACtC,MAAM,eAAC,CAAC,AAAC,IAAI,CAAE,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,AACpC,MAAM,eAAC,CAAC,AAAC,IAAI,CAAE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAE,IAAI,CAAE,MAAM,CAAC;ACH/C,MAAM,eAAC,CAAC,OAAO,MAAM,CAAE,aAAa,CAAC,CAAE,KAAK,KAAK,CAAC;ACAlD,MAAM,eAAC,CAAC,OAAO,MAAM,CAAE,aAAa,CAAC,CAAE,KAAK,KAAK,CAAC;ACClD,MAAM,eAAC,CAAC,OAAO,MAAM,CAAE,aAAa,CAAC,CAAE,KAAK,KAAK,CAAC;ACLlD,GAAG,eAAC,CAAC,AACJ,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,KAAK,AACd,CAAC,AACD,IAAI,eAAC,CAAC,aAAa,CAAC,CAAC;ACJrB,GAAG,eAAC,CAAC,AACJ,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,KAAK,AACd,CAAC,AACD,IAAI,eAAC,CAAC,aAAa,CAAC,CAAC;ACJrB,GAAG,eAAC,CAAC,AACJ,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,KAAK,AACd,CAAC,AACD,IAAI,eAAC,CAAC,aAAa,CAAC,CAAC;ACkBrB,GAAG,cAAC,CAAC,AACJ,KAAK,CAAE,GAAG,CACV,MAAM,CAAE,GAAG,AACZ,CAAC,AAED,WAAW,cAAC,CAAC,AACZ,MAAM,CAAE,IAAI,CACZ,IAAI,CAAE,KAAK,AACZ,CAAC,AAED,MAAM,cAAC,CAAC,AACP,MAAM,CAAE,IAAI,CACZ,YAAY,CAAE,GAAG,AAClB,CAAC,AAED,MAAM,cAAC,CAAC,AACP,MAAM,CAAE,IAAI,CACZ,YAAY,CAAE,CAAC,AAChB,CAAC,AAED,KAAK,cAAC,CAAC,AACN,MAAM,CAAE,IAAI,AACb,CAAC,AAED,OAAO,cAAC,CAAC,AACR,MAAM,CAAE,IAAI,AACb,CAAC,AAED,qBAAO,CAAE,qBAAqB,cAAC,CAAC,AAC/B,MAAM,CAAE,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,AACrB,CAAC,AAED,qBAAqB,cAAC,CAAC,AACtB,YAAY,CAAE,CAAC,AAChB,CAAC"
}